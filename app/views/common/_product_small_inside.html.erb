<% product = product_small_inside %>
<div class="span-13">
  <div class="span-2">
    <div style="padding:4px;"><%= image_for(product) %></div>
  </div>
  <div class="span-7">
    <div style="padding-left:4px;"><b><%= product.category_prefix %>:<%= link_to product.title, account_product_path(product.account,product) %></b><br />
       From <%= link_to product.account.name, account_path(product.account) %><br />
       <%= product.description %></div>
  </div>
  <div class="span-4 last">
    <% if !product.sold_by_weight %>
      <b><%= product.formatted_price %> per <%= product.ordering_unit %></b><br />
    <% else %>
      <b><%= product.formatted_price %> per pound.</b><br />
      <b>Sold by the unit</b><br />  
      Size range: <%= product.min_weight %> - <%= product.max_weight %> lbs.<br />
      Estimated price: <%= product.formatted_estimated_price %><br />
    <% end %>
    <%= product.available_orderables_in_cycle(@current_delivery_cycle).size %> available for purchase<br />
    <% if can_edit(product) %>
      <%= product.carted_orderables_in_cycle(@current_delivery_cycle).size %> in shopping carts<br />
      <%= product.ordered_orderables_in_cycle(@current_delivery_cycle).size %> in completed orders<br />
    <% end %>
    <% if @current_user and @current_user.current_order %>
      <%= @current_user.current_order.count_product(product) %> in 
      <%= (@current_user.current_order.final ? ' your completed order' : ' your shopping cart') %>
    <% end %>
  </div>
</div> 

<div class="span-4 last">
  <ul>
    <!-- products can be edited or deleted when there is no cycle or when ordering is not yet open -->
    <% if can_edit(product) and 
      (!@current_delivery_cycle or (@current_delivery_cycle and @current_delivery_cycle.is_before_order)) %>
      <li><%= link_to 'Edit', edit_account_product_path(product.account,product) %></li>
      <li><%= link_to 'Delete', account_product_path(product.account,product), :method => :delete %></li>
    <% end %>
    <!-- inventory can be changed any time if there is a current cycle open and the product was
         not added after ordering opened in that cycle -->
    <% if can_edit(product) and @current_delivery_cycle and !@current_delivery_cycle.is_after_order and product.can_make_orderable(@current_delivery_cycle) %>
      <li>Adjust inventory:<br />
        <% form_remote_tag :url => make_orderable_account_product_path(product.account,product) do -%>
            <div style="margin-left:10px;"><%= text_field_tag 'number', 0, :size => 2 %> <%= submit_tag 'add' %></div>
          <% end -%>
        <% form_remote_tag :url => remove_orderable_account_product_path(product.account,product) do -%>
            <div style="margin-left:10px;"><%= text_field_tag 'number', 0, :size => 2 %> <%= submit_tag 'drop' %></div>
          <% end -%>
      </li>
    <% elsif @current_delivery_cycle and !product.can_make_orderable(@current_delivery_cycle) %>
      <li>Inventory adjustment not available until next cycle.</li>
    <% end %>
    <% if @current_user and @current_delivery_cycle and @current_delivery_cycle.is_order and product.available_orderables_in_cycle(@current_delivery_cycle).size > 0 %>
      <li><%= link_to_remote 'Add to cart', :url => { :action => :add_to_cart, :controller => :products, :id => product.id, :user_id => @current_user.id} %></li>
    <% end %>
  </ul>
</div>